import axios from "axios";
import { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import PropTypes from 'prop-types';
import Box from '@mui/material/Box';
import Tab from 'react-bootstrap/Tab';
import Tabs from 'react-bootstrap/Tabs';
import './styles/Dashboard.css';
import AddCardUa from "./AddCardUa";
import CardsListUa from "./CardsListUa";
import RemoveAllCards from "./RemoveAllCards";
import CurrentDate from "./CurrentDate";
import SearchUa from "./SearchUa";
import Footer from "./Footer";
import { Card, Flex, Spin, Input } from 'antd';

function TabPanel(props) {
  const { children, value, index, ...other } = props;
  

  return (
    <div
      role="tabpanel"
      hidden={value!== index}
      id={`vertical-tabpanel-${index}`}
      aria-labelledby={`vertical-tab-${index}`}
      {...other}
    >
      {value === index && (
        <Box sx={{ p: 3 }}>
          <div>{children}</div>
        </Box>
      )}
    </div>
  );
}

TabPanel.propTypes = {
  children: PropTypes.node,
  index: PropTypes.number.isRequired,
  value: PropTypes.number.isRequired,
};

function DashboardUa() {
  const { login } = useParams();
  const navigate = useNavigate();
  const [user, setUser] = useState(null);
  const [isUpdating, setIsUpdating] = useState(false);
  const [error, setError] = useState(null);

  useEffect(() => {
    if (!login) return;

    axios.get(`https://wordweb.vercel.app/userinfo/${login}`)
     .then((response) => {
        if (response.data) {
          setUser(response.data);
        } else {
          setUser('–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        }
      })
     .catch((error) => {
        console.error(error);
        if (error.response && error.response.status === 404) {
          setUser('–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        } else {
          setUser(null);
          console.error('–ù–µ–ø–µ—Ä–µ–¥–±–∞—á—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞', error);
        }
      });
  }, [login]);

  const deleteUser = async () => {
    try {
      const response = await axios.delete(`https://wordweb.vercel.app/delete/${login}`);
      alert(response.data);
      navigate('/ua');
    } catch (error) {
      console.log(error);
      alert('–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
    }
  };

  const handleUpdate = () => {
    setIsUpdating(true);
  };

  const handleSaveUpdate = (firstname, lastname, password, email) => {
    axios.patch(`https://wordweb.vercel.app/update/${login}`, { login, firstname, lastname, password, email })
     .then(() => {
        setUser({...user, firstname, lastname, password, email });
        setIsUpdating(false);
      })
     .catch((error) => {
        console.log(error);
        setError('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
      });
  };

  const handleCancelUpdate = () => {
    setIsUpdating(false);
  };

  if (!user) {
    return (
      <Flex align="center" gap="middle">
    <Spin size="large" />
  </Flex>
    );
  } else if (error) {
    return <p>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</p>;
  } else {
    return (
      <div className="dashboard">
        <h1>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ WordWeb, {user.login}! </h1>
        <Tabs
      defaultActiveKey="your-cards"
      id="justify-tab-example"
      className="mb-3"
      justify
    >
          <Tab eventKey="your-cards" title="–ö–∞—Ä—Ç–∫–∏">
            <div className="instructions">
              <Card title="–ò–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó" bordered={false}>
        <p>–Ø–∫ –≤—ñ–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫: </p>
            <ul>
              <li>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∞–±–æ –∫–ª–∏–∫–Ω—ñ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–∫—É, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –ø–µ—Ä–µ–∫–ª–∞–¥.</li>
              <li>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∞–±–æ –∫–ª—ñ–∫–Ω—ñ—Ç—å –Ω–∞ –∫–æ—â—ñ–∫, —â–æ–± –≤—ñ–¥–∞–ª–∏—Ç–∏ –∫–∞—Ä—Ç–∫—É. </li>
              <li>–ù–∞—Ç–∏—Å–Ω–∏—Ç—å –∞–±–æ –∫–ª–∏–∫–Ω—ñ—Ç—å –Ω–∞ –æ–ª—ñ–≤–µ—Ü—å, —â–æ–± –∑–º–∏–Ω–∏—Ç–∏ –∫–∞—Ä—Ç–∫—É</li>
              <li>–í–∏ –ø–æ–±–∞—á–∏—Ç–µ —á–æ—Ç–∏—Ä–∏ –∑–Ω–∞—á–∫–∏: üòÄ, üòê, üòí —ñ ‚úÖ. –ü–µ—Ä–µ–≥–ª—è–Ω—É–≤—à–∏ —Å–ª–æ–≤–æ, –≤–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –µ–º–æ—Ü—ñ–π. –ö–æ–ª–∏ –≤–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ –≤–∏–≤—á–∏–ª–∏ —Å–ª–æ–≤–æ, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ‚úÖ.</li>
              </ul>
      </Card>
      <Card title="–î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É –∫–∞—Ä—Ç–∫—É" bordered={false}>
                <AddCardUa />
      </Card>
              <Card title="–ó–Ω–∞–π–¥—ñ—Ç—å —Å–≤–æ—é –∫–∞—Ä—Ç–∫—É" bordered={false}>
                            <CurrentDate />
        <SearchUa user={user} />
      </Card>
      </div>
          <CardsListUa />
          </Tab>
                    <Tab eventKey="profile" title="–û–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å">

            <div className="dashboard-container">
            <div className="account">
                
                <Card title="–í–∞—à –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å" className="dashboard-item">
                  <p>–Ü–º&#39;—è: {user.firstname} {user.lastname}</p>
            <p>–õ–æ–≥—ñ–Ω: {user.login}</p>
            <p>–ï–ª–µ–∫—Ç—Ä–æ–Ω–∞ –∞–¥—Ä–µ—Å–∞: {user.email}</p>
            <button onClick={() => navigate('/ua')} className="update-btn">–í–∏–π—Ç–∏</button>
            <button onClick={handleUpdate} className="update-btn">–ó–º—ñ–Ω–∏—Ç–∏</button>
            {isUpdating && (
              <form>
                <label>–Ü–º&#39;—è:</label>
                <Input type="text" defaultValue={user.firstname} />
                <br />
                <label>–ü—Ä—ñ–∑–≤–∏—â–µ:</label>
                <Input type="text" defaultValue={user.lastname} />
                <br />
                <label>–ï–ª–µ–∫—Ç—Ä–æ–Ω–∞ –∞–¥—Ä–µ—Å–∞</label>
                <Input type="text" defaultValue={user.email} />
                <br />
                <button onClick={(e) => {
                  e.preventDefault();
                  const firstname = e.target.form[0].value;
                  handleSaveUpdate(firstname, user.lastname, user.password, user.email);
                }} className="update-btn">–ó–±–µ—Ä–µ–≥—Ç–∏</button>
                <button onClick={handleCancelUpdate} className="update-btn">–í—ñ–¥–º—ñ–Ω–∞</button>
              </form>
                )}
                </Card>
                <Card title="–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è" className="dashboard-item">
                  <p>–í–∏–¥–∞–ª–∏—Ç–∏ —É—Å—ñ –∫–∞—Ä—Ç–∫–∏:</p>
          <RemoveAllCards />
                                <p>–í–∏–¥–∞–ª–∏—Ç–∏ –í–∞—à –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å:</p>
          <p className="notice">–¶–µ–π –ø—Ä–æ—Ü–µ—Å –Ω–µ–æ–±–æ—Ä–æ—Ç–Ω–∏–π. –£—Å—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É —Ç–∞ –∫–∞—Ä—Ç–∫–∏ –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ.</p>
          <button onClick={deleteUser} className="delete-btn">–í–∏–¥–∞–ª–∏—Ç–∏ –æ–±–ª–∏–∫–æ–≤–∏–π –∑–∞–ø–∏—Å</button>
                </Card>
              </div>
              <div className="emoji-dashboard">
                <img className="dashboard-img" src="https://res.cloudinary.com/dosvnb1kk/image/upload/v1715636618/Flowers_kr6faw.jpg" />
              </div>
            </div>
      </Tab>
        </Tabs>
        <Footer />
      </div>
    );
  }
}

export default DashboardUa;